// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement()) 
  name String
  desc String
  price Int
  imgsrc String
  brandName String
  favourited Favourite[]

  brand Brand @relation(fields: [brandName], references: [name])
}

model Brand {
  id String @id @default(cuid()) 
  name String @unique
  products Product[]
}

model Favourite {
  productId Int
  userId String

  product Product @relation(fields: [productId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([productId, userId])
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  image         String
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  favourited Favourite[]
  
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}